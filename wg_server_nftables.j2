#!/sbin/nft -f

flush ruleset

# Note: iifname is used for '{{wg_iface}}' instead of iif because it allows
# nftables to load when the interface doesn't yet exist (which is the case when
# the system is booting)

table ip filter {
	chain input {
		type filter hook input priority 0; policy drop;
		ct state invalid counter drop comment "early drop of invalid packets"
		ct state {established, related} counter accept comment "accept all connections related to connections made by us"
		iif lo accept comment "accept loopback"
		iifname "{{ wg_iface }}" counter accept # Accept trusted networks
		iif != lo ip daddr 127.0.0.1/8 counter drop comment "drop connections to loopback not coming from loopback"
		ip protocol icmp counter accept comment "accept all ICMP types"
		tcp dport 22 counter accept comment "accept SSH"
		udp dport {{ wg_port }} counter accept comment "accept wireguard traffic"
		counter comment "count dropped packets"
	}

	chain forward {
			type filter hook forward priority 0; policy drop;
			ct state invalid counter # Early drop invalid packets
			ct state { established, related } counter accept # Accept reciprocal packets
			iifname "{{ wg_iface }}" counter accept # Accept trusted networks
		  counter comment "count dropped packets"
	}

	# If you're not counting packets, this chain can be omitted.
	chain output {
		type filter hook output priority 0; policy accept;
		counter comment "count accepted packets"
	}
}

table ip nat {
	chain prerouting {
		type nat hook prerouting priority 0; policy accept;
	}

	# for all packets to WAN, after routing, replace source address with primary IP of WAN interface
	chain postrouting {
		type nat hook postrouting priority 100; policy accept;
		oifname "{{ wan_iface }}" masquerade comment "Masquerade traffic from wireguard"
	}
}
